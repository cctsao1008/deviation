/*
 * Converted from X-GLCD by convert_xglcd_to_font.pl
 * Sat Jul 28 09:24:53 2012
 *
 * width       : 10
 * height      : 10
 * first char  : 0x20 ( )
 * last char   : 0x7e (~)
 * proportional: 1
 * bytes/col   : 2
 */

#ifndef FONTDECL
const uint8_t CharRange_Arial_10[] = {
    0x20, 0x7e, 0x00
};
const uint8_t Font_Arial_10[] = {
    //font widths
    0x02, 0x02, 0x03, 0x05, 0x05, 0x09, 0x06, 0x01, 0x03, 0x03,
    0x03, 0x05, 0x02, 0x03, 0x02, 0x03, 0x05, 0x03, 0x05, 0x05,
    0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x01, 0x01, 0x05, 0x05,
    0x05, 0x05, 0x0a, 0x07, 0x06, 0x06, 0x06, 0x05, 0x05, 0x07,
    0x06, 0x01, 0x04, 0x06, 0x05, 0x07, 0x06, 0x07, 0x05, 0x07,
    0x06, 0x06, 0x05, 0x06, 0x07, 0x09, 0x06, 0x07, 0x06, 0x02,
    0x03, 0x02, 0x05, 0x06, 0x02, 0x05, 0x05, 0x05, 0x05, 0x05,
    0x03, 0x05, 0x05, 0x01, 0x02, 0x04, 0x01, 0x07, 0x05, 0x05,
    0x05, 0x05, 0x03, 0x05, 0x02, 0x05, 0x05, 0x09, 0x05, 0x05,
    0x05, 0x03, 0x01, 0x04, 0x05,
    // font data
    // Char: 0x20( )
    0x00, 0x00,
    0x00, 0x00,
    // Char: 0x21(!)
    0xbf, 0x00,
    0x00, 0x00,
    // Char: 0x22(")
    0x07, 0x00,
    0x00, 0x00,
    0x07, 0x00,
    // Char: 0x23(#)
    0xe4, 0x00,
    0x3c, 0x00,
    0xe7, 0x00,
    0x3c, 0x00,
    0x27, 0x00,
    // Char: 0x24($)
    0x46, 0x00,
    0x89, 0x00,
    0xff, 0x01,
    0x89, 0x00,
    0x72, 0x00,
    // Char: 0x25(%)
    0x06, 0x00,
    0x09, 0x00,
    0x89, 0x00,
    0x66, 0x00,
    0x18, 0x00,
    0x66, 0x00,
    0x91, 0x00,
    0x90, 0x00,
    0x60, 0x00,
    // Char: 0x26(&)
    0x60, 0x00,
    0x96, 0x00,
    0x89, 0x00,
    0x99, 0x00,
    0x66, 0x00,
    0xa0, 0x00,
    // Char: 0x27(')
    0x07, 0x00,
    // Char: 0x28(()
    0xfc, 0x00,
    0x02, 0x01,
    0x01, 0x02,
    // Char: 0x29())
    0x01, 0x02,
    0x02, 0x01,
    0xfc, 0x00,
    // Char: 0x2a(*)
    0x0a, 0x00,
    0x07, 0x00,
    0x0a, 0x00,
    // Char: 0x2b(+)
    0x10, 0x00,
    0x10, 0x00,
    0x7c, 0x00,
    0x10, 0x00,
    0x10, 0x00,
    // Char: 0x2c(,)
    0x00, 0x00,
    0x80, 0x03,
    // Char: 0x2d(-)
    0x20, 0x00,
    0x20, 0x00,
    0x20, 0x00,
    // Char: 0x2e(.)
    0x00, 0x00,
    0x80, 0x00,
    // Char: 0x2f(/)
    0xc0, 0x00,
    0x3c, 0x00,
    0x03, 0x00,
    // Char: 0x30(0)
    0x7e, 0x00,
    0x81, 0x00,
    0x81, 0x00,
    0x81, 0x00,
    0x7e, 0x00,
    // Char: 0x31(1)
    0x04, 0x00,
    0x02, 0x00,
    0xff, 0x00,
    // Char: 0x32(2)
    0x82, 0x00,
    0xc1, 0x00,
    0xa1, 0x00,
    0x91, 0x00,
    0x8e, 0x00,
    // Char: 0x33(3)
    0x42, 0x00,
    0x81, 0x00,
    0x89, 0x00,
    0x89, 0x00,
    0x76, 0x00,
    // Char: 0x34(4)
    0x30, 0x00,
    0x2c, 0x00,
    0x22, 0x00,
    0xff, 0x00,
    0x20, 0x00,
    // Char: 0x35(5)
    0x4c, 0x00,
    0x8b, 0x00,
    0x89, 0x00,
    0x89, 0x00,
    0x71, 0x00,
    // Char: 0x36(6)
    0x7e, 0x00,
    0x89, 0x00,
    0x89, 0x00,
    0x89, 0x00,
    0x72, 0x00,
    // Char: 0x37(7)
    0x01, 0x00,
    0xe1, 0x00,
    0x19, 0x00,
    0x07, 0x00,
    0x01, 0x00,
    // Char: 0x38(8)
    0x76, 0x00,
    0x89, 0x00,
    0x89, 0x00,
    0x89, 0x00,
    0x76, 0x00,
    // Char: 0x39(9)
    0x4e, 0x00,
    0x91, 0x00,
    0x91, 0x00,
    0x91, 0x00,
    0x7e, 0x00,
    // Char: 0x3a(:)
    0x84, 0x00,
    // Char: 0x3b(;)
    0x84, 0x03,
    // Char: 0x3c(<)
    0x10, 0x00,
    0x28, 0x00,
    0x28, 0x00,
    0x28, 0x00,
    0x44, 0x00,
    // Char: 0x3d(=)
    0x28, 0x00,
    0x28, 0x00,
    0x28, 0x00,
    0x28, 0x00,
    0x28, 0x00,
    // Char: 0x3e(>)
    0x44, 0x00,
    0x28, 0x00,
    0x28, 0x00,
    0x28, 0x00,
    0x10, 0x00,
    // Char: 0x3f(?)
    0x02, 0x00,
    0x01, 0x00,
    0xb1, 0x00,
    0x09, 0x00,
    0x06, 0x00,
    // Char: 0x40(@)
    0xf8, 0x00,
    0x06, 0x01,
    0x72, 0x02,
    0x89, 0x02,
    0x85, 0x02,
    0x45, 0x02,
    0xf9, 0x02,
    0x8d, 0x02,
    0x42, 0x02,
    0x3c, 0x01,
    // Char: 0x41(A)
    0xc0, 0x00,
    0x30, 0x00,
    0x2e, 0x00,
    0x21, 0x00,
    0x2e, 0x00,
    0x30, 0x00,
    0xc0, 0x00,
    // Char: 0x42(B)
    0xff, 0x00,
    0x89, 0x00,
    0x89, 0x00,
    0x89, 0x00,
    0x89, 0x00,
    0x7e, 0x00,
    // Char: 0x43(C)
    0x3c, 0x00,
    0x42, 0x00,
    0x81, 0x00,
    0x81, 0x00,
    0x81, 0x00,
    0x42, 0x00,
    // Char: 0x44(D)
    0xff, 0x00,
    0x81, 0x00,
    0x81, 0x00,
    0x81, 0x00,
    0x42, 0x00,
    0x3c, 0x00,
    // Char: 0x45(E)
    0xff, 0x00,
    0x89, 0x00,
    0x89, 0x00,
    0x89, 0x00,
    0x89, 0x00,
    // Char: 0x46(F)
    0xff, 0x00,
    0x09, 0x00,
    0x09, 0x00,
    0x09, 0x00,
    0x01, 0x00,
    // Char: 0x47(G)
    0x3c, 0x00,
    0x42, 0x00,
    0x81, 0x00,
    0x81, 0x00,
    0x91, 0x00,
    0x52, 0x00,
    0x34, 0x00,
    // Char: 0x48(H)
    0xff, 0x00,
    0x08, 0x00,
    0x08, 0x00,
    0x08, 0x00,
    0x08, 0x00,
    0xff, 0x00,
    // Char: 0x49(I)
    0xff, 0x00,
    // Char: 0x4a(J)
    0x60, 0x00,
    0x80, 0x00,
    0x80, 0x00,
    0x7f, 0x00,
    // Char: 0x4b(K)
    0xff, 0x00,
    0x10, 0x00,
    0x08, 0x00,
    0x1c, 0x00,
    0x62, 0x00,
    0x81, 0x00,
    // Char: 0x4c(L)
    0xff, 0x00,
    0x80, 0x00,
    0x80, 0x00,
    0x80, 0x00,
    0x80, 0x00,
    // Char: 0x4d(M)
    0xff, 0x00,
    0x06, 0x00,
    0x38, 0x00,
    0xc0, 0x00,
    0x38, 0x00,
    0x06, 0x00,
    0xff, 0x00,
    // Char: 0x4e(N)
    0xff, 0x00,
    0x02, 0x00,
    0x0c, 0x00,
    0x30, 0x00,
    0x40, 0x00,
    0xff, 0x00,
    // Char: 0x4f(O)
    0x3c, 0x00,
    0x42, 0x00,
    0x81, 0x00,
    0x81, 0x00,
    0x81, 0x00,
    0x42, 0x00,
    0x3c, 0x00,
    // Char: 0x50(P)
    0xff, 0x00,
    0x11, 0x00,
    0x11, 0x00,
    0x11, 0x00,
    0x0e, 0x00,
    // Char: 0x51(Q)
    0x3c, 0x00,
    0x42, 0x00,
    0x81, 0x00,
    0xa1, 0x00,
    0xa1, 0x00,
    0x42, 0x00,
    0xbc, 0x00,
    // Char: 0x52(R)
    0xff, 0x00,
    0x09, 0x00,
    0x09, 0x00,
    0x19, 0x00,
    0x69, 0x00,
    0x86, 0x00,
    // Char: 0x53(S)
    0x46, 0x00,
    0x89, 0x00,
    0x89, 0x00,
    0x91, 0x00,
    0x91, 0x00,
    0x62, 0x00,
    // Char: 0x54(T)
    0x01, 0x00,
    0x01, 0x00,
    0xff, 0x00,
    0x01, 0x00,
    0x01, 0x00,
    // Char: 0x55(U)
    0x7f, 0x00,
    0x80, 0x00,
    0x80, 0x00,
    0x80, 0x00,
    0x80, 0x00,
    0x7f, 0x00,
    // Char: 0x56(V)
    0x03, 0x00,
    0x0c, 0x00,
    0x30, 0x00,
    0xc0, 0x00,
    0x30, 0x00,
    0x0c, 0x00,
    0x03, 0x00,
    // Char: 0x57(W)
    0x07, 0x00,
    0x38, 0x00,
    0xc0, 0x00,
    0x38, 0x00,
    0x04, 0x00,
    0x38, 0x00,
    0xc0, 0x00,
    0x38, 0x00,
    0x07, 0x00,
    // Char: 0x58(X)
    0x81, 0x00,
    0x66, 0x00,
    0x18, 0x00,
    0x18, 0x00,
    0x66, 0x00,
    0x81, 0x00,
    // Char: 0x59(Y)
    0x01, 0x00,
    0x06, 0x00,
    0x08, 0x00,
    0xf0, 0x00,
    0x08, 0x00,
    0x06, 0x00,
    0x01, 0x00,
    // Char: 0x5a(Z)
    0x81, 0x00,
    0xc1, 0x00,
    0xb1, 0x00,
    0x8d, 0x00,
    0x83, 0x00,
    0x81, 0x00,
    // Char: 0x5b([)
    0xff, 0x03,
    0x01, 0x02,
    // Char: 0x42(B)
    0x03, 0x00,
    0x3c, 0x00,
    0xc0, 0x00,
    // Char: 0x5d(])
    0x01, 0x02,
    0xff, 0x03,
    // Char: 0x5e(^)
    0x08, 0x00,
    0x06, 0x00,
    0x01, 0x00,
    0x06, 0x00,
    0x08, 0x00,
    // Char: 0x5f(_)
    0x00, 0x02,
    0x00, 0x02,
    0x00, 0x02,
    0x00, 0x02,
    0x00, 0x02,
    0x00, 0x02,
    // Char: 0x60(`)
    0x01, 0x00,
    0x02, 0x00,
    // Char: 0x61(a)
    0x68, 0x00,
    0x94, 0x00,
    0x94, 0x00,
    0x54, 0x00,
    0xf8, 0x00,
    // Char: 0x62(b)
    0xff, 0x00,
    0x48, 0x00,
    0x84, 0x00,
    0x84, 0x00,
    0x78, 0x00,
    // Char: 0x63(c)
    0x78, 0x00,
    0x84, 0x00,
    0x84, 0x00,
    0x84, 0x00,
    0x48, 0x00,
    // Char: 0x64(d)
    0x78, 0x00,
    0x84, 0x00,
    0x84, 0x00,
    0x48, 0x00,
    0xff, 0x00,
    // Char: 0x65(e)
    0x78, 0x00,
    0x94, 0x00,
    0x94, 0x00,
    0x94, 0x00,
    0x58, 0x00,
    // Char: 0x66(f)
    0x04, 0x00,
    0xfe, 0x00,
    0x05, 0x00,
    // Char: 0x67(g)
    0x78, 0x02,
    0x84, 0x02,
    0x84, 0x02,
    0x48, 0x02,
    0xfc, 0x01,
    // Char: 0x68(h)
    0xff, 0x00,
    0x08, 0x00,
    0x04, 0x00,
    0x04, 0x00,
    0xf8, 0x00,
    // Char: 0x69(i)
    0xfd, 0x00,
    // Char: 0x6a(j)
    0x00, 0x01,
    0xfd, 0x01,
    // Char: 0x6b(k)
    0xff, 0x00,
    0x10, 0x00,
    0x68, 0x00,
    0x84, 0x00,
    // Char: 0x6c(l)
    0xff, 0x00,
    // Char: 0x6d(m)
    0xfc, 0x00,
    0x08, 0x00,
    0x04, 0x00,
    0xfc, 0x00,
    0x04, 0x00,
    0x04, 0x00,
    0xf8, 0x00,
    // Char: 0x6e(n)
    0xfc, 0x00,
    0x04, 0x00,
    0x04, 0x00,
    0x04, 0x00,
    0xf8, 0x00,
    // Char: 0x6f(o)
    0x78, 0x00,
    0x84, 0x00,
    0x84, 0x00,
    0x84, 0x00,
    0x78, 0x00,
    // Char: 0x70(p)
    0xfc, 0x03,
    0x48, 0x00,
    0x84, 0x00,
    0x84, 0x00,
    0x78, 0x00,
    // Char: 0x71(q)
    0x78, 0x00,
    0x84, 0x00,
    0x84, 0x00,
    0x48, 0x00,
    0xfc, 0x03,
    // Char: 0x72(r)
    0xfc, 0x00,
    0x08, 0x00,
    0x04, 0x00,
    // Char: 0x73(s)
    0x48, 0x00,
    0x94, 0x00,
    0x94, 0x00,
    0xa4, 0x00,
    0x48, 0x00,
    // Char: 0x74(t)
    0xff, 0x00,
    0x84, 0x00,
    // Char: 0x75(u)
    0x7c, 0x00,
    0x80, 0x00,
    0x80, 0x00,
    0x40, 0x00,
    0xfc, 0x00,
    // Char: 0x76(v)
    0x0c, 0x00,
    0x30, 0x00,
    0xc0, 0x00,
    0x30, 0x00,
    0x0c, 0x00,
    // Char: 0x77(w)
    0x0c, 0x00,
    0x30, 0x00,
    0xc0, 0x00,
    0x38, 0x00,
    0x04, 0x00,
    0x38, 0x00,
    0xc0, 0x00,
    0x30, 0x00,
    0x0c, 0x00,
    // Char: 0x78(x)
    0x84, 0x00,
    0x48, 0x00,
    0x30, 0x00,
    0x48, 0x00,
    0x84, 0x00,
    // Char: 0x79(y)
    0x0c, 0x00,
    0x30, 0x02,
    0xc0, 0x01,
    0x30, 0x00,
    0x0c, 0x00,
    // Char: 0x7a(z)
    0x84, 0x00,
    0xc4, 0x00,
    0xb4, 0x00,
    0x8c, 0x00,
    0x84, 0x00,
    // Char: 0x7b({)
    0x10, 0x00,
    0xee, 0x01,
    0x01, 0x02,
    // Char: 0x7c(|)
    0xff, 0x03,
    // Char: 0x7d(})
    0x00, 0x00,
    0x01, 0x02,
    0xee, 0x01,
    0x10, 0x00,
    // Char: 0x7e(~)
    0x18, 0x00,
    0x08, 0x00,
    0x18, 0x00,
    0x10, 0x00,
    0x08, 0x00,

};
#else //FONTDECL
FONTDECL(0x80 | 10, 10, CharRange_Arial_10, Font_Arial_10, "arial10")
#endif //FONTDECL
